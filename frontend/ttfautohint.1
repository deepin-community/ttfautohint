.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH TTFAUTOHINT "1" "April 2019" "ttfautohint 1.8.3" "User Commands"
.SH NAME
ttfautohint \- add new, auto-generated hints to a TrueType font
.SH SYNOPSIS
.B ttfautohint
[\fI\,OPTION\/\fR]... [\fI\,IN-FILE \/\fR[\fI\,OUT-FILE\/\fR]]
.SH DESCRIPTION
Replace hints in TrueType font IN\-FILE and write output to OUT\-FILE.
If OUT\-FILE is missing, standard output is used instead;
if IN\-FILE is missing also, standard input and output are used.
.PP
The new hints are based on FreeType's auto\-hinter.
.PP
This program is a simple front\-end to the `ttfautohint' library.
.PP
Long options can be given with one or two dashes,
and with and without equal sign between option and argument.
This means that the following forms are acceptable:
`\-foo=bar', `\-\-foo=bar', `\-foo bar', `\-\-foo bar'.
.PP
Mandatory arguments to long options are mandatory for short options too.
.SH OPTIONS
.TP
\fB\-\-debug\fR
print debugging information
.TP
\fB\-a\fR, \fB\-\-stem\-width\-mode\fR=\fI\,S\/\fR
select stem width mode for grayscale, GDI
ClearType, and DW ClearType, where S is a
string of three letters with possible values
`n' for natural, `q' for quantized, and `s'
for strong (default: qsq)
.TP
\fB\-c\fR, \fB\-\-composites\fR
hint glyph composites also
.TP
\fB\-d\fR, \fB\-\-dehint\fR
remove all hints
.TP
\fB\-D\fR, \fB\-\-default\-script\fR=\fI\,S\/\fR
set default OpenType script (default: latn)
.TP
\fB\-f\fR, \fB\-\-fallback\-script\fR=\fI\,S\/\fR
set fallback script (default: none)
.TP
\fB\-F\fR, \fB\-\-family\-suffix\fR=\fI\,S\/\fR
append suffix to the family name string(s)
in the `name' table
.TP
\fB\-G\fR, \fB\-\-hinting\-limit\fR=\fI\,N\/\fR
switch off hinting above this PPEM value
(default: 200); value 0 means no limit
.TP
\fB\-h\fR, \fB\-\-help\fR
display this help and exit
.TP
\fB\-H\fR, \fB\-\-fallback\-stem\-width\fR=\fI\,N\/\fR
set fallback stem width
(default: 50 font units at 2048 UPEM)
.TP
\fB\-i\fR, \fB\-\-ignore\-restrictions\fR
override font license restrictions
.TP
\fB\-I\fR, \fB\-\-detailed\-info\fR
add detailed ttfautohint info
to the version string(s) in the `name' table
.TP
\fB\-l\fR, \fB\-\-hinting\-range\-min\fR=\fI\,N\/\fR
the minimum PPEM value for hint sets
(default: 8)
.TP
\fB\-m\fR, \fB\-\-control\-file\fR=\fI\,FILE\/\fR
get control instructions from FILE
.TP
\fB\-n\fR, \fB\-\-no\-info\fR
don't add ttfautohint info
to the version string(s) in the `name' table
.TP
\fB\-p\fR, \fB\-\-adjust\-subglyphs\fR
handle subglyph adjustments in exotic fonts
.TP
\fB\-r\fR, \fB\-\-hinting\-range\-max\fR=\fI\,N\/\fR
the maximum PPEM value for hint sets
(default: 50)
.TP
\fB\-R\fR, \fB\-\-reference\fR=\fI\,FILE\/\fR
derive blue zones from reference font FILE
.TP
\fB\-s\fR, \fB\-\-symbol\fR
input is symbol font
.TP
\fB\-S\fR, \fB\-\-fallback\-scaling\fR
use fallback scaling, not hinting
.TP
\fB\-t\fR, \fB\-\-ttfa\-table\fR
add TTFA information table
.TP
\fB\-T\fR, \fB\-\-ttfa\-info\fR
display TTFA table in IN\-FILE and exit
.TP
\fB\-v\fR, \fB\-\-verbose\fR
show progress information
.TP
\fB\-V\fR, \fB\-\-version\fR
print version information and exit
.TP
\fB\-W\fR, \fB\-\-windows\-compatibility\fR
add blue zones for `usWinAscent' and
`usWinDescent' to avoid clipping
.TP
\fB\-x\fR, \fB\-\-increase\-x\-height\fR=\fI\,N\/\fR
increase x height for sizes in the range
6<=PPEM<=N; value 0 switches off this feature
(default: 14)
.TP
\fB\-X\fR, \fB\-\-x\-height\-snapping\-exceptions\fR=\fI\,STRING\/\fR
specify a comma\-separated list of
x\-height snapping exceptions, for example
"\-9, 13\-17, 19" (default: "")
.TP
\fB\-Z\fR, \fB\-\-reference\-index\fR=\fI\,N\/\fR
face index of reference font (default: 0)
.PP
The program accepts both TTF and TTC files as input.
Use option \fB\-i\fR only if you have a legal permission to modify the font.
The used PPEM value for option \fB\-p\fR is FUnits per em, normally 2048.
With option \fB\-s\fR, use default values for standard stem width and height,
otherwise they are derived from script\-specific characters
resembling the shape of character `o'.
.PP
A hint set contains the optimal hinting for a certain PPEM value;
the larger the hint set range (as given by options \fB\-l\fR and \fB\-r\fR),
the more hint sets get computed, usually increasing the output font size.
The `gasp' table of the output file always enables grayscale hinting
for all sizes (limited by option \fB\-G\fR, which is handled in the bytecode).
Increasing the value of \fB\-G\fR does not increase the output font size.
.PP
Options \fB\-f\fR and \fB\-D\fR take a four\-letter string that identifies a script.
Option \fB\-f\fR sets the script used as a fallback for glyphs that can't be
associated with a known script.  By default, such glyphs are hinted;
if option \fB\-S\fR is set, they are scaled only instead.  Option \fB\-D\fR sets the
default script for handling OpenType features.
.PP
Possible four\-letter string values are
.IP
adlm (Adlam),
arab (Arabic),
armn (Armenian),
avst (Avestan),
bamu (Bamum),
beng (Bengali),
buhd (Buhid),
cakm (Chakma),
cans (Canadian Syllabics),
cari (Carian),
cher (Cherokee),
copt (Coptic),
cprt (Cypriot),
cyrl (Cyrillic),
deva (Devanagari),
dsrt (Deseret),
ethi (Ethiopic),
geor (Georgian (Mkhedruli)),
geok (Georgian (Khutsuri)),
glag (Glagolitic),
goth (Gothic),
grek (Greek),
gujr (Gujarati),
guru (Gurmukhi),
hebr (Hebrew),
kali (Kayah Li),
khmr (Khmer),
khms (Khmer Symbols),
knda (Kannada),
lao (Lao),
latn (Latin),
latb (Latin Subscript Fallback),
latp (Latin Superscript Fallback),
lisu (Lisu),
mlym (Malayalam),
mong (Mongolian),
mymr (Myanmar),
nkoo (N'Ko),
olck (Ol Chiki),
orkh (Old Turkic),
osge (Osage),
osma (Osmanya),
saur (Saurashtra),
shaw (Shavian),
sinh (Sinhala),
sund (Sundanese),
taml (Tamil),
tavt (Tai Viet),
telu (Telugu),
tfng (Tifinagh),
thai (Thai),
vaii (Vai),
none (no script).
.PP
A control instructions file contains entries of the form
.IP
[<font idx>] <script> <feature> @ <glyph ids>
.IP
[<font idx>] <script> <feature> w <stem widths>
.IP
[<font idx>] <glyph id> l|r <points> [(<left offset>,<right offset>)]
.IP
[<font idx>] <glyph id> n <points>
.IP
[<font idx>] <glyph id> t|p <points> [x <shift>] [y <shift>] @ <ppems>
.PP
<font idx> is the current subfont, <glyph id> is a glyph name or index,
<glyph ids> is a set of <glyph id>s, <stem widths> is an unordered set of
integer stem widths in font units, <shift> is a real number in px,
<points> and <ppems> are integer ranges as with option `\-X'.
.PP
<script> and <feature> are four\-letter tags that define a style
the <glyph ids> are assigned to; possible values for <script> are the same
as with option \fB\-D\fR, possible values for <feature> are
.IP
c2cp (petite capitals from capitals),
c2sc (small capitals from capitals),
ordn (ordinals),
pcap (petite capitals),
ruby (ruby),
sinf (scientific inferiors),
smcp (small capitals),
subs (subscript),
sups (superscript),
titl (titling).
.PP
`w' assigns stem widths to a style; the first value sets the default.
`l' (`r') creates one\-point segments with direction left (right).
<left offset> and <right offset> specify offsets (in font units)
relative to the corresponding points to give the segments a length.
`n' removes points from horizontal segments, making them `weak' points.
`t' (`p') applies delta exceptions to the given points before (after) IUP.
.PP
`#' starts a line comment, which gets ignored.
Empty lines are ignored, too.
.PP
Key letters `l', `r', `n', `p', `t', `w', `x', and `y'
have the verbose aliases `left', `right', `nodir', `point', `touch',
`width', `xshift', and `yshift', respectively.
.PP
A GUI version of this program is called `ttfautohintGUI'.
.SH "REPORTING BUGS"
Report bugs to: freetype\-devel@nongnu.org
.PP
ttfautohint home page: <https://www.freetype.org/ttfautohint>
.SH COPYRIGHT
Copyright \(co 2011\-2019 Werner Lemberg <wl@gnu.org>.
License: FreeType License (FTL) or GNU GPLv2.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
